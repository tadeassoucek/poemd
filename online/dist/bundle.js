/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var poemd;
/******/ (() => {
  // webpackBootstrap
  /******/ var __webpack_modules__ = {
    /***/ "../lib/log.js":
      /*!*********************!*\
  !*** ../lib/log.js ***!
  \*********************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        "use strict";
        eval(
          '\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.err = exports.warn = exports.debug = exports.prefixes = exports.writeTable = exports.write = void 0;\nvar utils_1 = __webpack_require__(/*! ./utils */ "../lib/utils.js");\n/**\n * Writes `data` to stderr. Can be redefined.\n * @param data The things to write.\n * @param prefixKey The key of the Prefix.\n */\nvar write = function (data, prefixKey) {\n    var prefix = exports.prefixes[prefixKey] || "";\n    var prefixStr = typeof prefix === "object" && "value" in prefix ? prefix.value : prefix;\n    var prefixPlaceholder = "...".padEnd(prefix.length + 2);\n    var message = (Array.isArray(data)\n        ? data.map(function (e) { return (typeof e === "string" ? e : utils_1.inspect(e)); }).join(" ")\n        : data).replace(/\\n/g, "\\n" + prefixPlaceholder);\n    console.error((prefixStr ? prefixStr + "  " : "") + message);\n};\nexports.write = write;\nvar writeTable = function (rows, headers) {\n    if (headers) {\n        var headerLine = headers.join("\\t");\n        console.error(headerLine);\n        console.error("-".repeat(headerLine.length));\n    }\n    rows.forEach(function (row) {\n        console.error(row.join("\\t"));\n    });\n};\nexports.writeTable = writeTable;\nexports.prefixes = {\n    debug: "DBUG",\n    warn: "WARN",\n    err: "ERR!"\n};\nfunction debug() {\n    var data = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        data[_i] = arguments[_i];\n    }\n    exports.write(data, "debug");\n}\nexports.debug = debug;\nfunction warn() {\n    var data = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        data[_i] = arguments[_i];\n    }\n    exports.write(data, "warn");\n}\nexports.warn = warn;\nfunction err() {\n    var data = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        data[_i] = arguments[_i];\n    }\n    exports.write(data, "err");\n}\nexports.err = err;\n//# sourceMappingURL=log.js.map\n\n//# sourceURL=webpack://poemd/../lib/log.js?'
        );

        /***/
      },

    /***/ "../lib/main.js":
      /*!**********************!*\
  !*** ../lib/main.js ***!
  \**********************/
      /***/ function (__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        eval(
          '\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.log = void 0;\n__exportStar(__webpack_require__(/*! ./parser */ "../lib/parser.js"), exports);\nexports.log = __webpack_require__(/*! ./log */ "../lib/log.js");\n//# sourceMappingURL=main.js.map\n\n//# sourceURL=webpack://poemd/../lib/main.js?'
        );

        /***/
      },

    /***/ "../lib/parser.js":
      /*!************************!*\
  !*** ../lib/parser.js ***!
  \************************/
      /***/ function (__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        eval(
          '\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== "function" && b !== null)\n            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === "number") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === "function" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i["return"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Parser = exports.InternalParserError = exports.State = void 0;\nvar utils_1 = __webpack_require__(/*! ./utils */ "../lib/utils.js");\nvar renderer_1 = __webpack_require__(/*! ./renderers/renderer */ "../lib/renderers/renderer.js");\nvar poem_1 = __webpack_require__(/*! ./poem */ "../lib/poem.js");\nvar log_1 = __webpack_require__(/*! ./log */ "../lib/log.js");\nvar utils_2 = __webpack_require__(/*! ./utils */ "../lib/utils.js");\nvar defaultParsingOptions = {\n    markdownMatchBounds: "stanza",\n    quoteMatchBounds: "none",\n    onNewTaskWhenBusy: "error"\n};\n/** Represents a state the parser can be in. */\nvar State = /** @class */ (function () {\n    function State(payload) {\n        this.id = State.ID++;\n        this.payload = payload;\n        this.outConnections = [];\n    }\n    State.resetID = function () {\n        return (State.ID = 0);\n    };\n    State.prototype.toString = function (depth) {\n        var e_1, _a;\n        if (depth === void 0) { depth = 0; }\n        var s = "(#" + this.id;\n        if (this.payload)\n            s +=\n                " " +\n                    utils_2.inspect(this.payload)\n                        .replace(/\\n/g, "")\n                        .replace(/\\s{2,}/g, " ");\n        s += ")\\n";\n        var indent = "  ".repeat(depth + 1);\n        try {\n            for (var _b = __values(this.outConnections), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var con = _c.value;\n                s += indent + con.toString(depth + 1);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return s;\n    };\n    State.ID = 0;\n    return State;\n}());\nexports.State = State;\n/** Represents a connection between parser states. */\nvar StateConnection = /** @class */ (function () {\n    function StateConnection(char, in_, out) {\n        this.char = char;\n        this.in = in_;\n        this.in.outConnections.push(this);\n        this.out = out;\n        this.out.inConnection = this;\n    }\n    StateConnection.prototype.toString = function (depth) {\n        if (depth === void 0) { depth = 0; }\n        return utils_2.inspect(this.char) + " -> " + this.out.toString(depth);\n    };\n    return StateConnection;\n}());\nvar InternalParserError = /** @class */ (function (_super) {\n    __extends(InternalParserError, _super);\n    function InternalParserError(message, char, buffer, state) {\n        var _this = _super.call(this, message) || this;\n        _this.name = "Internal Parser Error";\n        _this.char = char;\n        _this.buffer = buffer;\n        _this.state = state;\n        return _this;\n    }\n    return InternalParserError;\n}(Error));\nexports.InternalParserError = InternalParserError;\nvar Parser = /** @class */ (function () {\n    function Parser(rendererRenderersOrSequences, marksOrOptions, definitelyOptions) {\n        var _this = this;\n        this.sequences = [];\n        this.marks = [];\n        if (rendererRenderersOrSequences instanceof renderer_1.Renderer) {\n            this.sequences = rendererRenderersOrSequences.collectSequences();\n            this.marks = rendererRenderersOrSequences.collectMarks();\n        }\n        else if (rendererRenderersOrSequences instanceof Array) {\n            rendererRenderersOrSequences.forEach(function (rs) {\n                var _a, _b;\n                if (rs instanceof renderer_1.Renderer) {\n                    (_a = _this.sequences).push.apply(_a, __spreadArray([], __read(rs.collectSequences())));\n                    (_b = _this.marks).push.apply(_b, __spreadArray([], __read(rs.collectMarks())));\n                }\n                else if (typeof rs === "string")\n                    _this.sequences.push(rs);\n                else\n                    throw new Error("unexpected type in first argument: " + typeof rs);\n            });\n        }\n        else if (rendererRenderersOrSequences)\n            throw new Error("first argument has to be an array of strings, a Renderer object or an array of Renderer objects");\n        if (marksOrOptions instanceof Array)\n            marksOrOptions.forEach(function (m) {\n                if (typeof m === "string")\n                    _this.marks.push(m);\n                else\n                    throw new Error("unexpected type in second argument: " + typeof m);\n            });\n        else if (marksOrOptions instanceof Object)\n            this.options = utils_1.setDefaults(marksOrOptions, defaultParsingOptions);\n        else if (marksOrOptions)\n            throw new Error("second argument has to be an array of strings or an object");\n        if (definitelyOptions) {\n            if (definitelyOptions instanceof Object)\n                this.options = utils_1.setDefaults(definitelyOptions, defaultParsingOptions);\n            else\n                throw new Error("third argument has to be an object");\n        }\n        this.createStates();\n        this.tokens = [];\n        this.charBuffer = "";\n    }\n    Parser.prototype.createStates = function () {\n        var _this = this;\n        this.initialNormalState = new State();\n        var allSequences = __spreadArray(__spreadArray([], __read(this.sequences)), __read(this.marks));\n        var groupSequencesByCharOnIndex = function (sequences, index) {\n            var storage = {};\n            sequences.forEach(function (item) {\n                var group = item[index];\n                if (!group)\n                    return;\n                storage[group] || (storage[group] = []);\n                storage[group].push(item);\n            });\n            return storage;\n        };\n        var maxLength = Math.max.apply(Math, __spreadArray([], __read(allSequences.map(function (seq) { return seq.length; }))));\n        var whatIs = function (s) {\n            return _this.marks.includes(s) ? "mark" : _this.sequences.includes(s) ? "sequence" : "nothing";\n        };\n        (function createLayer(srcState, sequences, accumulator, index) {\n            if (index >= maxLength)\n                return;\n            var grouped = groupSequencesByCharOnIndex(sequences, index);\n            for (var group in grouped)\n                if (group) {\n                    var seq = accumulator + group;\n                    var type = whatIs(seq);\n                    var state = new State(type != "nothing" ? new poem_1.Token(type == "mark" ? poem_1.TokenType.PendingMark : poem_1.TokenType.Sequence, seq) : void 0);\n                    new StateConnection(group, srcState, state);\n                    createLayer(state, grouped[group], seq, index + 1);\n                }\n        })(this.initialNormalState, allSequences, "", 0);\n        this.resetState();\n        log_1.debug(this.initialNormalState.toString());\n    };\n    Parser.prototype.reset = function () {\n        this.tokens = [];\n    };\n    Parser.prototype.addChar = function (c) {\n        if (c != "\\0")\n            this.charBuffer += c;\n    };\n    Parser.prototype.flush = function () {\n        if (this.charBuffer)\n            this.tokens.push(new poem_1.Token(poem_1.TokenType.Text, this.charBuffer));\n        this.charBuffer = "";\n        this.sequenceBuffer = "";\n    };\n    Parser.prototype.reportChar = function (c) {\n        this.table.push([\n            utils_2.inspect(c),\n            utils_2.inspect(this.currentState.id),\n            utils_2.inspect(this.charBuffer),\n            utils_2.inspect(this.sequenceBuffer),\n            utils_2.inspect(this.tokens.length)\n        ]);\n    };\n    Parser.prototype.handleCharacter = function (c) {\n        var e_2, _a;\n        var _this = this;\n        try {\n            // if we can continue to another state\n            for (var _b = __values(this.currentState.outConnections), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var conn = _c.value;\n                if (c === conn.char) {\n                    // move to the new state\n                    this.currentState = conn.out;\n                    // if the new state has a payload and no outgoing connections\n                    if (this.currentState.payload && !this.currentState.outConnections.length) {\n                        this.flush();\n                        // push payload as token\n                        this.tokens.push(this.currentState.payload.clone());\n                        // return to the initial state. we don\'t care about seqbuf\n                        this.resetState();\n                    }\n                    else\n                        this.sequenceBuffer += c;\n                    this.reportChar(c);\n                    return;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        // no state to continue to\n        var state = this.currentState;\n        /** If true, we\'re still on the same state as before. */\n        var sameState = true;\n        // return until you hit the initial state or a state with a payload\n        while (state != this.initialNormalState && !state.payload) {\n            state = state.inConnection.in;\n            sameState = false;\n        }\n        // the state we ended on has a payload\n        if (state.payload) {\n            var pendingHandle = void 0;\n            // handle any extra characters in the seqbuf (e.g. if the sequences are [\'-\', \'---\'] and we have a \'--\' at the\n            // input, we need to do a little bit of recursion to handle it as what it\'s supposed to be (two \'-\' sequences,\n            // in this case))\n            if (this.sequenceBuffer.length !== state.payload.value.length) {\n                this.sequenceBuffer = this.sequenceBuffer.substring(state.payload.value.length);\n                pendingHandle = this.sequenceBuffer;\n            }\n            this.flush();\n            this.tokens.push(state.payload.clone());\n            this.resetState();\n            if (pendingHandle)\n                pendingHandle.split("").forEach(function (c) { return _this.handleCharacter(c); });\n        }\n        // we ended on the initial state\n        else {\n            this.charBuffer += this.resetState();\n            this.addChar(c);\n        }\n        // end of the string, reset and flush\n        if (c === "\\0") {\n            this.resetState(true);\n            this.flush();\n        }\n        this.reportChar(c);\n    };\n    /**\n     * Resets the state and the sequence buffer.\n     * @param addToCharbuf If `true`, the sequence buffer is added to the char buffer.\n     * @returns the value of the sequence buffer (before it was overwritten).\n     */\n    Parser.prototype.resetState = function (addToCharbuf) {\n        if (addToCharbuf === void 0) { addToCharbuf = false; }\n        this.currentState = this.initialNormalState;\n        var val = this.sequenceBuffer;\n        this.sequenceBuffer = "";\n        if (addToCharbuf)\n            this.charBuffer += this.sequenceBuffer;\n        return val;\n    };\n    Parser.prototype.parse = function (s) {\n        var _this = this;\n        this.table = [];\n        (s + "\\0").split("").forEach(function (c) { return _this.handleCharacter(c); });\n        log_1.writeTable(this.table, ["char", "state #", "charbuf", "seqbuf", "toks"]);\n        log_1.debug(utils_2.inspect(this.tokens));\n        return this.tokens;\n    };\n    return Parser;\n}());\nexports.Parser = Parser;\n//# sourceMappingURL=parser.js.map\n\n//# sourceURL=webpack://poemd/../lib/parser.js?'
        );

        /***/
      },

    /***/ "../lib/poem.js":
      /*!**********************!*\
  !*** ../lib/poem.js ***!
  \**********************/
      /***/ function (__unused_webpack_module, exports) {
        "use strict";
        eval(
          '\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== "function" && b !== null)\n            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.VerseLine = exports.ThematicBreak = exports.Stanza = exports.PoemContent = exports.Poem = exports.Token = exports.TokenType = void 0;\nvar TokenType;\n(function (TokenType) {\n    TokenType["Text"] = "text";\n    TokenType["Raw"] = "raw";\n    TokenType["PendingMark"] = "pending_mark";\n    TokenType["OpeningMark"] = "opening_mark";\n    TokenType["ClosingMark"] = "closing_mark";\n    TokenType["OpeningQuote"] = "opening_quote";\n    TokenType["ClosingQuote"] = "closing_quote";\n    TokenType["Sequence"] = "sequence";\n})(TokenType = exports.TokenType || (exports.TokenType = {}));\nvar Token = /** @class */ (function () {\n    function Token(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    /** Creates a new token with the same type and value. */\n    Token.prototype.clone = function () {\n        return new Token(this.type, this.value);\n    };\n    return Token;\n}());\nexports.Token = Token;\nvar Poem = /** @class */ (function () {\n    function Poem() {\n        this.content = [];\n    }\n    return Poem;\n}());\nexports.Poem = Poem;\nvar PoemContent = /** @class */ (function () {\n    function PoemContent() {\n    }\n    return PoemContent;\n}());\nexports.PoemContent = PoemContent;\nvar Stanza = /** @class */ (function (_super) {\n    __extends(Stanza, _super);\n    function Stanza() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Stanza;\n}(PoemContent));\nexports.Stanza = Stanza;\nvar ThematicBreak = /** @class */ (function (_super) {\n    __extends(ThematicBreak, _super);\n    function ThematicBreak() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ThematicBreak;\n}(PoemContent));\nexports.ThematicBreak = ThematicBreak;\nvar VerseLine = /** @class */ (function () {\n    function VerseLine() {\n        this.indentLevel = 0;\n        this.isContinuation = false;\n        this.tokens = [];\n    }\n    return VerseLine;\n}());\nexports.VerseLine = VerseLine;\n//# sourceMappingURL=poem.js.map\n\n//# sourceURL=webpack://poemd/../lib/poem.js?'
        );

        /***/
      },

    /***/ "../lib/renderers/renderer.js":
      /*!************************************!*\
  !*** ../lib/renderers/renderer.js ***!
  \************************************/
      /***/ function (__unused_webpack_module, exports) {
        "use strict";
        eval(
          '\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === "function" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i["return"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Renderer = void 0;\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    Renderer.prototype.collectMarks = function () {\n        var set = new Set();\n        Object.keys(this.marks).forEach(function (mark) { return set.add(mark); });\n        // Object.values(this.modes).forEach((mode) => Object.keys(mode.marks).forEach((mark) => set.add(mark)));\n        return __spreadArray([], __read(set));\n    };\n    Renderer.prototype.collectSequences = function () {\n        var set = new Set();\n        Object.keys(this.sequences).forEach(function (s) { return set.add(s); });\n        // Object.values(this.modes).forEach((m) => Object.keys(m.sequences).forEach((s) => set.add(s)));\n        return __spreadArray([], __read(set));\n    };\n    return Renderer;\n}());\nexports.Renderer = Renderer;\n//# sourceMappingURL=renderer.js.map\n\n//# sourceURL=webpack://poemd/../lib/renderers/renderer.js?'
        );

        /***/
      },

    /***/ "../lib/utils.js":
      /*!***********************!*\
  !*** ../lib/utils.js ***!
  \***********************/
      /***/ function (__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        eval(
          '\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === "number") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === "function" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i["return"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.getMax = exports.setDefaults = exports.clone = exports.inspect = void 0;\nif (typeof window === "undefined") {\n    var _inspect_1 = __webpack_require__(/*! util */ "?96a2").inspect;\n    exports.inspect = function (val) {\n        return _inspect_1(val, {\n            colors: true,\n            depth: 99\n        });\n    };\n}\nelse {\n    var escapeString_1 = function (s) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.entries({\n                "\\\\\\\\": "\\\\",\n                "\\0": "0",\n                "\\n": "n",\n                "\\t": "t",\n                "\\r": "r",\n                "\\v": "v",\n                "\\f": "f"\n            })), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], val = _d[1];\n                s = s.replace(new RegExp(key, "g"), "<span class=\\"" + classPrefix_1 + "special-char\\">\\\\" + val + "</span>");\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        s = s.replace(/[^ -~]/g, function (sub) {\n            return (\'<span class="\' +\n                classPrefix_1 +\n                \'special-char">\\\\x\' +\n                sub.charCodeAt(0).toString(16).padStart(2, "0") +\n                "</span>");\n        });\n        return s;\n    };\n    var classPrefix_1 = "poemd-log-";\n    var indent_1 = "  ";\n    var noSpecialChars_1 = /^[\\w_$]+$/;\n    var apostrophe_1 = /\'/g;\n    var _inspect_2 = function (val, depth, objects) {\n        switch (typeof val) {\n            case "undefined":\n            case "boolean":\n                return "<span class=\\"" + (classPrefix_1 + typeof val) + "\\">" + val + "</span>";\n            case "number":\n            case "bigint":\n                return ("<span class=\\"" + (classPrefix_1 + typeof val) + "\\" title=\\"0b" + val.toString(2) + ", 0o" + val.toString(8) + ", 0x" + val.toString(16) + "\\">" +\n                    val +\n                    (typeof val === "bigint" ? "n" : "") +\n                    "</span>");\n            case "string": {\n                var q = apostrophe_1.test(val) ? \'"\' : "\'";\n                return ("<span class=\\"" + classPrefix_1 + "string\\" title=\\"Length: " + val.length + "\\">" +\n                    q +\n                    escapeString_1(val).replace(new RegExp(q, "g"), "\\\\" + q) +\n                    q +\n                    "</span>");\n            }\n            case "symbol": {\n                var v = val.toString();\n                return "<span class=\\"" + classPrefix_1 + "symbol\\">[" + (v ? escapeString_1(v) : "Symbol") + "]</span>";\n            }\n            case "function": {\n                var f = val;\n                return "<span class=\\"" + classPrefix_1 + "function\\">" + (f.name ? "[Function " + f.name + "]" : "[Function]") + "</span>";\n            }\n            case "object": {\n                if (objects.find(function (o) { return o === val; }))\n                    return "<span class=\\"" + classPrefix_1 + "circular\\">[Circular]</span>";\n                var newObjects_1 = __spreadArray(__spreadArray([], __read(objects)), [val]);\n                var indentation_1 = indent_1.repeat(depth);\n                if (val === null)\n                    return "<span class=\\"" + classPrefix_1 + "null\\">null</span>";\n                else if (val instanceof RegExp)\n                    return "<span class=\\"" + classPrefix_1 + "regexp\\">" + val + "</span>";\n                else if (Array.isArray(val)) {\n                    if (!val.length)\n                        return "[]";\n                    var s_1 = "[\\n";\n                    val.forEach(function (e, i) {\n                        return (s_1 += indentation_1 + indent_1 + _inspect_2(e, depth + 1, newObjects_1) + (i != val.length - 1 ? "," : "") + "\\n");\n                    });\n                    return s_1 + indentation_1 + "]";\n                }\n                if (!Object.keys(val).length)\n                    return "{}";\n                var s_2 = "";\n                if (val.constructor)\n                    s_2 += "<span class=\\"" + classPrefix_1 + "class-name\\" title=\\"This object is an instance of the &quot;" + val.constructor.name + "&quot; class.\\">" + val.constructor.name + "</span> ";\n                s_2 += "{\\n";\n                var entries_1 = Object.entries(val);\n                // uhhhhh... yeah\n                entries_1.forEach(function (_a, i) {\n                    var _b = __read(_a, 2), k = _b[0], v = _b[1];\n                    return (s_2 +=\n                        indentation_1 +\n                            indent_1 +\n                            (noSpecialChars_1.test(k)\n                                ? "<span class=\\"" + classPrefix_1 + "property\\">" + k + "</span>"\n                                : _inspect_2(k, depth + 1, newObjects_1)) +\n                            ": " +\n                            _inspect_2(v, depth + 1, newObjects_1) +\n                            (i != entries_1.length - 1 ? "," : "") +\n                            "\\n");\n                });\n                return s_2 + indentation_1 + "}";\n            }\n            default:\n                throw new Error("...i have no idea how you managed to do this, but \\"" + typeof val + "\\" is not a valid Javascript type???");\n        }\n    };\n    exports.inspect = function (val) { return _inspect_2(val, 0, []); };\n}\n/**\n * Creates a deep clone of an object. Preserves prototypes.\n */\nfunction clone(obj) {\n    if (typeof obj === "object" && obj) {\n        var newObj_1 = Object.create(Object.getPrototypeOf(obj));\n        Object.entries(obj).forEach(function (_a) {\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\n            return (newObj_1[key] = clone(value));\n        });\n    }\n    return obj;\n}\nexports.clone = clone;\n/**\n * @param obj The object whose properties we overwrite.\n * @param defaults The object containing default values for properties in `obj`.\n * @returns A new object with those properties from `defaults` which are missing in `obj` replaced.\n */\nfunction setDefaults(obj, defaults) {\n    if (!obj || Object.keys(obj).length == 0)\n        return clone(defaults);\n    else if (!defaults || Object.keys(defaults).length == 0)\n        return clone(obj);\n    var res = {};\n    for (var key in obj)\n        res[key] = obj[key];\n    for (var key in defaults)\n        if (obj[key] === undefined)\n            res[key] = defaults[key];\n    return res;\n}\nexports.setDefaults = setDefaults;\nfunction getMax(arr, key) {\n    var e_2, _a;\n    var max;\n    try {\n        for (var arr_1 = __values(arr), arr_1_1 = arr_1.next(); !arr_1_1.done; arr_1_1 = arr_1.next()) {\n            var val = arr_1_1.value;\n            if (!max || max[key] >= val[key])\n                max = val;\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return)) _a.call(arr_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return max;\n}\nexports.getMax = getMax;\n//# sourceMappingURL=utils.js.map\n\n//# sourceURL=webpack://poemd/../lib/utils.js?'
        );

        /***/
      },

    /***/ "?96a2":
      /*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
      /***/ () => {
        eval("/* (ignored) */\n\n//# sourceURL=webpack://poemd/util_(ignored)?");

        /***/
      }

    /******/
  }; // The module cache
  /************************************************************************/
  /******/ /******/ var __webpack_module_cache__ = {}; // The require function
  /******/
  /******/ /******/ function __webpack_require__(moduleId) {
    /******/ // Check if module is in cache
    /******/ var cachedModule = __webpack_module_cache__[moduleId];
    /******/ if (cachedModule !== undefined) {
      /******/ return cachedModule.exports;
      /******/
    } // Create a new module (and put it into the cache)
    /******/ /******/ var module = (__webpack_module_cache__[moduleId] = {
      /******/ // no module.id needed
      /******/ // no module.loaded needed
      /******/ exports: {}
      /******/
    }); // Execute the module function
    /******/
    /******/ /******/ __webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__); // Return the exports of the module
    /******/
    /******/ /******/ return module.exports;
    /******/
  } // startup // Load entry module and return exports // This entry module is referenced by other modules so it can't be inlined
  /******/
  /************************************************************************/
  /******/
  /******/ /******/ /******/ /******/ var __webpack_exports__ = __webpack_require__("../lib/main.js");
  /******/ poemd = __webpack_exports__;
  /******/
  /******/
})();
